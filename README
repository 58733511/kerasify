# Kerasify

Kerasify is small library for running Keras models from a C++ application. 

Design goals:

* Compatibility with image processing Sequential networks generated by Keras using Theano backend.
* No external dependencies, standard library, C++11 features OK.
* Model stored on disk in binary format that can be quickly read.
* Model stored in memory in contiguous block for better cache performance.
* Unit testable, rigorous unit tests.

# Example

From Python:

```
test_x = np.random.rand(10, 10).astype('f')
test_y = np.random.rand(10).astype('f')

model = Sequential()
model.add(Dense(1, input_dim=10))

model.compile(loss='mean_squared_error', optimizer='adamax')
model.fit(test_x, test_y, nb_epoch=1, verbose=False)

from kerasify import export_model
export_model(model, 'example.model')
```

From C++:

```
// Initialize model.
KerasModel model;
bool result = model.LoadModel("example.model");

// Run prediction.
Tensor in(1), out;
in.data_ = {{0}};

result = model.Apply(&in, &out)
```

# Unit tests

To run the unit tests, generate the unit test models and then run `keras_model_test`:

```
$ python make_tests.py
...

$ make
$ ./keras_model_test
...
Benchmark network loads in 0.023902s
Benchmark network runs in 0.023261s

```

# License

MIT 
